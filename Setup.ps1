# PowerShell Profile System Setup
# Run this once to install the git-based profile system

param(
    [string]$InstallPath = "$env:USERPROFILE\.config\powershell-profile",
    [switch]$Force
)

$RepoUrl = 'https://github.com/J-MaFf/powershell-profile-system.git'

Write-Host 'üöÄ PowerShell Profile System Setup' -ForegroundColor Cyan
Write-Host '===================================' -ForegroundColor Cyan

try {
    # Check if git is available
    if (-not (Get-Command git -ErrorAction SilentlyContinue)) {
        throw 'Git is required but not found. Please install Git first.'
    }

    # Check if profile repo already exists
    if (Test-Path $InstallPath) {
        if ($Force) {
            Write-Host "üóëÔ∏è  Removing existing installation at $InstallPath" -ForegroundColor Yellow
            Remove-Item $InstallPath -Recurse -Force
        } else {
            Write-Host "‚ö†Ô∏è  Profile already installed at $InstallPath" -ForegroundColor Orange
            Write-Host "üí° Use -Force to reinstall or run 'git pull' in that directory to update" -ForegroundColor Yellow
            return
        }
    }

    # Create parent directory if needed
    $parentDir = Split-Path $InstallPath -Parent
    if (-not (Test-Path $parentDir)) {
        Write-Host "üìÅ Creating directory $parentDir" -ForegroundColor Cyan
        New-Item -ItemType Directory -Path $parentDir -Force | Out-Null
    }

    # Clone the repository
    Write-Host "üì¶ Cloning profile repository..." -ForegroundColor Cyan
    git clone $RepoUrl $InstallPath --quiet

    if (-not (Test-Path "$InstallPath\PSProfile.ps1")) {
        throw 'Profile installation failed - PSProfile.ps1 not found'
    }

    # Update PowerShell profile to use the system
    Write-Host "üîß Configuring PowerShell profile..." -ForegroundColor Cyan
    
    $profileContent = @"
# PowerShell Profile System - Git Based
# Auto-generated by Setup.ps1

`$ProfileRepo = '$InstallPath'

# Update profile repo (skip in VS Code for speed)
if (-not (`$null -ne `$psEditor -or `$env:TERM_PROGRAM -eq "vscode")) {
    if (Test-Path `$ProfileRepo) {
        Push-Location `$ProfileRepo
        try {
            git fetch --quiet 2>`$null
            `$behind = git rev-list --count HEAD..origin/main 2>`$null
            if (`$behind -and `$behind -gt 0) {
                git pull origin main --quiet 2>`$null
            }
        } catch {
            # Ignore git errors
        }
        Pop-Location
    }
}

# Load the profile
if (Test-Path "`$ProfileRepo\PSProfile.ps1") {
    . "`$ProfileRepo\PSProfile.ps1"
}
"@

    # Backup existing profile
    if (Test-Path $PROFILE) {
        $backupPath = "$PROFILE.backup.$(Get-Date -Format 'yyyyMMdd-HHmmss')"
        Copy-Item $PROFILE $backupPath
        Write-Host "üìÑ Existing profile backed up to $backupPath" -ForegroundColor Yellow
    }

    # Create profile directory if needed
    $profileDir = Split-Path $PROFILE -Parent
    if (-not (Test-Path $profileDir)) {
        New-Item -ItemType Directory -Path $profileDir -Force | Out-Null
    }

    # Write new profile
    $profileContent | Out-File -FilePath $PROFILE -Encoding UTF8 -Force

    Write-Host '' # Empty line
    Write-Host '‚úÖ PowerShell Profile System installed successfully!' -ForegroundColor Green
    Write-Host '' # Empty line
    Write-Host 'üìù What was installed:' -ForegroundColor Cyan
    Write-Host "   ‚Ä¢ Profile repo: $InstallPath" -ForegroundColor Gray
    Write-Host "   ‚Ä¢ PowerShell profile: $PROFILE" -ForegroundColor Gray
    Write-Host '' # Empty line
    Write-Host 'üéØ Next steps:' -ForegroundColor Cyan
    Write-Host '   ‚Ä¢ Restart PowerShell to load the new profile' -ForegroundColor Yellow
    Write-Host '   ‚Ä¢ Test with: Get-1PasswordMode' -ForegroundColor Yellow
    Write-Host '' # Empty line
    Write-Host 'üîÑ To update later: git pull from the repo directory or just restart PowerShell' -ForegroundColor Cyan

}
catch {
    Write-Host "‚ùå Setup failed: $($_.Exception.Message)" -ForegroundColor Red
    Write-Host "üí° You can try running with -Force to reinstall" -ForegroundColor Yellow
}